Fjordmodel / BRIMM

Biased Random-Walk Model

* Description for paper
  [[file:~/projects/jako/coebeli/paper_adrien_ice_melange_weakening_JoG_publication/manuscript.tex::called BRIMM (biased random-walk ice mélange model) is based on][Fjordpaper Adrien]]


To better understand the possible dynamics of dense ice mélange, we
developed a simple numerical model, based on the idea that the
floating ice blocks move like in a Brownian random walk. This model,
called BRIMM (biased random-walk ice mélange model) is based on
discrete particles representing floating ice blocks, that can move
along the axis of the fjord. Blocks are created at the glacier
terminus by calving, and float away when they reach the open
ocean. The blocks move randomly, but cannot penetrate each other. We
ignore cohesion and momentum transfer between blocks.

At each model time step, all blocks move according to a random walk
with normally distributed distance and random direction of motion. To
achieve more realistic dynamics, a bias is added to the random
distribution, making the blocks more likely to move away from the
glacier. If another block is in its path, the moving block stops when
hitting that neighboring block. The leftmost block, representing the
advancing glacier calving front, moves at a constant speed.

Calving events are triggered when the block closest to the calving
front moves a certain distance away from the front. During each
calving event the glacier terminus moves back by a certain distance. A
prescribed number of new ice blocks is created and placed closely
packed at the calving front, pushing away ice blocks that would
otherwise overlap.

The BRIMM model was implemented in the Python programming language and
is publicly available under the GPL-v3 license.

* model results

  outfilename = 'fig_modelruns/fjordmodel1d__{nslots:.0f}_{blength:.0f}_{nblocks:.0f}_{dxcalv:03d}_{dxrand0:03d}_{bias0:.2f}.png'.format(**param)


* brownian motion time scale dependent on particle size

* Rationale
** random motion distance

   - forcing through wind, tidal pumping -> chatic currents
   - when a block is moving without forcing, it stops by viscous drag in water
   

** iceberg dynamics
   distance and time for stopping:

***   absolutely excellent:
   https://physics.stackexchange.com/questions/72503/how-do-i-calculate-the-distance-a-ship-will-take-to-stop

When stopping the engines, how quickly will a ship lose its speed, and
how far will it go?

Newton's law tells us the change in the ship's momentum equals the
drag force:

\( M \frac{dv}{dt} = -F_{drag} \)

Here $M$ is the ship's mass, and $v$ is its speed. For ships with a
large areal cross section A under the water line and a speed v such
that \(\sqrt{v^2 A} >> \nu\) with $\nu$ the kinematic viscosity
(momentum diffusion constant) of the water, the drag force is given
by:

\( F_{drag}=\frac{1}{2}C_{D} \rho v^2 A \)

Here, $\rho$ is the density of the water, and $C_D$ the drag
coefficient, a dimensionless constant typically in the range 0.1 -
0.5, depending on the shape of the ship.

This is all you need. The rest is straightforward math. Substituting
the equation for the drag force into Newton's law, one readily obtains

\(\frac{dv}{dt} = \frac{-1}{L}v^{2} \)
\(\frac{dv}{dt} = \frac{-1}{\Lambda}v^{2} \)  better ??

with   (which I would call Halbwertslänge)

\(\frac{1}{\Lambda}= \frac{C_D \rho A}{2 M} \)


The solution to this equation is $v=\Lambda/(t+t_{0})$ with $t_{0}$ chosen such
that the ratio $L/t_{0}$ (?? $\Lambda$??)matches the initial speed of the ship.

Clearly, although the ship will shed its speed rapidly at early times,
at later times the speed loss slows down considerably. The distance
travelled is the integral over $v(t)$:

\( x(t)= \Lambda \ln \frac{t+t_0}{t_0}\)

Some specific results:

If it takes a time $t_{0}$ and a distance \( (\ln 2) \Lambda = 0.693 \Lambda \) to
half the ship's speed, it will take an additional time $2 t_0$ and an
additional distance $0.693 \Lambda $ to again half the speed. The total time
to reduce the speed by 90% is $9 t_{0}$. During that time period the ship
will travel a distance of $2.30 \Lambda$

Estimation of the parameter $\Lambda$ and t0 from velocity vs time data
is easy: t0 is the time it takes to reduce the initial speed v0 to
half the value, and L0 is the product v0t0

.

Note that the derived results are valid up to times t
at which v(t)A−−√>>ν or t+t0<<LA−−√/ν

*** Beispiel für Eisberg

\begin{align}
\frac{1}{\Lambda} &= \frac{C_D \rho_w A}{2 \rho_i (1.1 A)   L} \\
\Lambda  &\simeq  \frac{2}{C_D} L
\end{align}

    C_D = 0.5...1
    rho_w = 1000
    A   = 100 * 100   ( oder viel grösser )
    M   = (1.1*100) * 100 * 200 * 917

    and therefore $\Lambda$ is about the length $L$ of the iceberg

    this also agrees with movies, observations at jako


    if we assume that 1 m/s is fast, the iceberg is 100 meters long
    then t_0 = L/v = 100 sec 

* Rules

This model simulates the motion of floating ice blocks in the
fjord. The model is 1D, and each block is characterized by its
postition. 

It relies on two assumptions:

1. blocks cannot penetrate each other

2. blocks move randomly

for the calving front we have two more assumptions:

3. if the block next to the calving front moves more than a certain
   amount, a calving event occurs

4. If a calving event occurs, a certain amount of blocks is released
   to the fjord




Extensions:

- inhomogeneous block size

- some kind of momentum transfer during collisions

**** TODO [#B] implement glacier motion                             :WAITING:
     SCHEDULED: <2022-02-07 Mon>
   
   [[file:~/projects/fjordmodel/python/analyze_fjordmodel.py::filenames = sorted(glob.glob('../modelruns/*_0.15.nc'))]]
   Added: [2022-02-07 Mon 11:57]
